import strategy.*;

public class Main {
    public static void main(String[] args) {
        long startTime = System.currentTimeMillis();
        int[] randomIntegers = new int[] {};
        // Algo from https://stackabuse.com/sorting-algorithms-in-java/
        Strategy[] algos = {new TriSelection(), new TriBubble(), new TriInsertion(), new TriParTas()};
        for (Strategy algo : algos) {
            //algo.solve(new int[] {1, 4, 2, 23, 2, 5, 8, 7});
            algo.solve(randomIntegers);
        }
        long stopTime = System.currentTimeMillis();
        long elapsedTime = stopTime - startTime;
        System.out.println("Temps d'ex√©cution : " + elapsedTime + "ms");
    }
}
